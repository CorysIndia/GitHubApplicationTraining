<core:CoreApplication
    x:Class="UGP_EDRF.BootStrap.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:RSI.WPFApplication.Core;assembly=RSI.WPFApplication.Core"
    
    
    SplashScreenName="Resources/splashscreen.png">


    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/RSI.Emulation.Controls;component/Resources.xaml" />
                <ResourceDictionary Source="pack://application:,,,/RSI.FoxboroEVO.Core;component/Resources.xaml" />
                <ResourceDictionary Source="ProjectStyles.xaml" />
                <ResourceDictionary Source="../TOC.xaml" />
                <ResourceDictionary Source="/UGP_EDRF;component/UGP_Stencils.xaml"/>
                
            </ResourceDictionary.MergedDictionaries>

            <!--  Globe Valve Color  -->
            <Color x:Key="GlobeValve_CloseColor">Black</Color>
            <Color x:Key="GlobeValve_OpenColor">Gray</Color>
            <Color x:Key="GlobeValve_FullOpenColor">Gray</Color>
            <Color x:Key="CloseValveColor">Black</Color>
            <Color x:Key="OpenValveColor">Gray</Color>



            <LinearGradientBrush  x:Key="ButtonBGBrush"  StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="White" Offset="0"/>
                    <GradientStop Color="LightGray" Offset="1"/>
                </LinearGradientBrush>

            <LinearGradientBrush  x:Key="ButtonPressedBGBrush"  StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="LightGray" Offset="0"/>
                <GradientStop Color="White" Offset="1"/>
            </LinearGradientBrush>


            <Style x:Key="FoxboroEvoButton" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource ButtonBGBrush}" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="SnapsToDevicePixels" Value="True" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="DarkGray" BorderThickness="2">
                                <Grid Margin="10,0">
                                    <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <!--<Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#E59400" />
                                    <Setter Property="Foreground" Value="White" />
                                    
                                </Trigger>-->

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource ButtonPressedBGBrush}" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="DarkGray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FoxboroEvoToggleButton" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="{StaticResource ButtonBGBrush}" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="SnapsToDevicePixels" Value="True" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="DarkGray" BorderThickness="2">
                                <Grid Margin="10,0">
                                    <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <!--<Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#E59400" />
                                    <Setter Property="Foreground" Value="White" />
                                    
                                </Trigger>-->

                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource ButtonPressedBGBrush}" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="DarkGray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!-- Toolbar buttons -->
            <Style x:Key="bt" TargetType="Button">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="bt25" TargetType="Button">
                <Setter Property="Width" Value="25" />
                <Setter Property="Height" Value="25" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="btt25" TargetType="ToggleButton">
                <Setter Property="Width" Value="25" />
                <Setter Property="Height" Value="25" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="bt25Disabled" TargetType="Button">
                <Setter Property="Width" Value="25" />
                <Setter Property="Height" Value="25" />
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Opacity" Value="0.4" />
            </Style>

            <Style x:Key="btDisabled" TargetType="Button">
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="Opacity" Value="0.4"/>
            </Style>

            <Style TargetType="RSIButton" x:Key="ButtonEnabled">
                <Style.Resources>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Style.Resources>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RSIButton">
                            <Border Background="Transparent">
                                <ContentPresenter/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type RSI_PressureSafetyValve}">
                <Setter Property="DecimalFormat" Value="F1" />
                <Setter Property="Height" Value="20" />
                <Setter Property="ColorClose" Value="Black" />
                <Setter Property="ColorOpen" Value="Gray" />
                <Setter Property="ColorOpenBypassValve" Value="Gray" />
                <Setter Property="ColorCloseBypassValve" Value="Black" />
                <Setter Property="ColorOpenBlockValve" Value="Gray" />
                <Setter Property="ColorCloseBlockValve" Value="Black" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RSI_PressureSafetyValve}">
                            <Grid Background="Transparent">

                                <Grid x:Name="draw">
                                    <Grid.RenderTransform>
                                        <RotateTransform Angle="{Binding Angle, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Grid.RenderTransform>

                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="0" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Canvas
                                            Width="20"
                                            Height="20"
                                            Margin="5,0,0,0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top">
                                            <Path
                                                Canvas.Left="7.062"
                                                Canvas.Top="-5.5"
                                                Width="1"
                                                Height="14"
                                                Data="M7.0633986,6.6874174 L7.3125,-4.9930827"
                                                Stretch="Fill"
                                                Stroke="Black" />
                                            <Path
                                                Canvas.Left="4.5"
                                                Canvas.Top="1.875"
                                                Width="6"
                                                Height="3.625"
                                                Data="M4.5000596,1.875 L9.4994631,4.5"
                                                Stretch="Fill"
                                                Stroke="Black" />
                                            <Path
                                                Canvas.Left="4.5"
                                                Canvas.Top="-1.75"
                                                Width="6"
                                                Height="3.625"
                                                Data="M4.5000596,1.875 L9.4994631,4.5"
                                                Stretch="Fill"
                                                Stroke="Black" />
                                            <Path
                                                Canvas.Left="4.526"
                                                Canvas.Top="-5.401"
                                                Width="6"
                                                Height="3.625"
                                                Data="M4.5271981,-1.7764009 L9.5266016,0.84859907"
                                                Stretch="Fill"
                                                Stroke="Black" />
                                        </Canvas>
                                        <Path
                                            x:Name="path"
                                            Grid.Row="1"
                                            Width="{Binding ActualHeight, ElementName=path}"
                                            Margin="5,0,0,0"
                                            HorizontalAlignment="Left"
                                            Data="M0,20 L15,20 7.5,7.5 20,15 20,0 7.5,7.5 z"
                                            Fill="{TemplateBinding ComputedColor}"
                                            RenderTransformOrigin="0.385,0.383"
                                            Stretch="Fill"
                                            Stroke="{TemplateBinding BorderBrush}"
                                            StrokeEndLineCap="Triangle"
                                            StrokeLineJoin="Bevel"
                                            StrokeMiterLimit="0"
                                            StrokeStartLineCap="Triangle" />
                                    </Grid>

                                    <Grid x:Name="Part2toRotation" Margin="13,10,-16,-35">
                                        <Border
                                            x:Name="BypassValvePipe"
                                            BorderBrush="{Binding PipeColor, RelativeSource={RelativeSource TemplatedParent}}"
                                            BorderThickness="0,0,3,3"
                                            Visibility="{Binding Visibility, ElementName=BypassValve}" />
                                        <Path
                                            x:Name="BypassValve"
                                            Width="15"
                                            Height="20"
                                            Margin="0,0,-6,0"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Data="M0,0 1,0 0,1 1,1z"
                                            Fill="{Binding CurrentColorBypassValve, RelativeSource={RelativeSource TemplatedParent}}"
                                            Stretch="Fill"
                                            Stroke="{TemplateBinding BorderBrush}"
                                            StrokeThickness="{TemplateBinding BorderThickness}"
                                            Visibility="{Value BypassValveEnable,
                                                               FallbackValue=Collapsed}" />
                                        <Path
                                            x:Name="BlockValve"
                                            Width="15"
                                            Height="20"
                                            Margin="-8,0,0,0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Data="M0,0 1,0 0,1 1,1z"
                                            Fill="{Binding CurrentColorBlockValve, RelativeSource={RelativeSource TemplatedParent}}"
                                            Stretch="Fill"
                                            Stroke="{TemplateBinding BorderBrush}"
                                            StrokeThickness="{TemplateBinding BorderThickness}"
                                            Visibility="{Value BlockValvesEnable,
                                                               FallbackValue=Collapsed}" />
                                    </Grid>

                                </Grid>

                                <!--  Flash  -->
                                <Flash
                                    Margin="0,-10,-10,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Visitor="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  Default HighlightedBorderBrush=Lime  -->
            <!--<Style TargetType="{x:Type TouchTarget}">
                <Setter Property="HighLighterBorderBrush" Value="Lime" />
            </Style>-->

        </ResourceDictionary>
    </Application.Resources>
</core:CoreApplication>