<UserControl x:Class="UGP_STG.BootStrap.Framework.Toolbars.NavigationBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UGP_STG.BootStrap.Framework.Toolbars"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:markupExtensions="clr-namespace:RSI.FoxboroEVO.Core.MarkupExtensions;assembly=RSI.FoxboroEVO.Core"
             mc:Ignorable="d" 
             d:DesignWidth="1024">

    <UserControl.Resources>

        <Style x:Key="ButtonPath" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource ButtonBGBrush}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="DarkGray" BorderThickness="2">
                            <Grid x:Name="grid" Margin="10,0">
                            
                                
                            
                        <ContentPresenter x:Name="MyContent"
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                        <!--Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:MyDependencyClass.DataForPath)}"-->
                            <Path x:Name="MyPath" 
                                  SnapsToDevicePixels="True" 
                                  Width="20" 
                                  Height="20" 
                                  Stretch="Fill" 
                                  Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" 
                                  Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:MyDependencyClass.DataForPath)}"
                              />
                    </Grid>
                    </Border>
                        <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Green"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource ButtonPressedBGBrush}" />
                            </Trigger>

                            <Trigger Property="Tag" Value="OnlyText">
                            <Setter TargetName="MyPath" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="MyContent" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="Tag" Value="OnlyPath">
                            <Setter TargetName="MyPath" Property="Visibility" Value="Visible" />
                            <Setter TargetName="MyContent" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    </UserControl.Resources>

    <Grid Background="#FF00A19B">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>


        </Grid.ColumnDefinitions>
        <Image x:Name="Logo"
               Height="30"
               HorizontalAlignment="Center"
               IsEnabled="False"
               IsHitTestVisible="False"
               Source="..\..\..\Resources/Logo.png" />
        <!--<RSIText Grid.Column="1"
                        Width="110"
                        Height="40"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        BorderBrush="Black"
                        BorderThickness="1"
                        Text="Alarm Summary"
                        ToolTip="Alarm List">-->
            <!--<RSIText.Style>
                            <Style TargetType="{x:Type RSIText}">

                                -->
            <!--  Default : No Alarm Activate  -->
            <!--
                                <Setter Property="Background" Value="Gray" />

                                <Style.Triggers>
                                    -->
            <!--  Alarm Activate  -->
            <!--
                                    <DataTrigger Binding="{markupExtensions1:AlarmServiceFoxboroBinding AlarmStatusManager.IsOneAlarmInAcknowledgedStatus}" Value="true">
                                        <Setter Property="Background" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RSIText.Style>-->

            <!--  blink  -->
            <!--<i:Interaction.Triggers>-->
                <!--  Alarm Activate and not Ack  -->
                <!--<ei:DataTrigger Binding="{markupExtensions:AlarmServiceFoxboroBinding AlarmStatusManager.IsAnAlarmOtherThanNRActiveAndNotAcknowledged}" Value="True">
                    <BlinkAction PropertyName="Background" To="Red" />
                </ei:DataTrigger>
            </i:Interaction.Triggers>

            <RSIText.Animations>
                <ClickAnimation>
                    <Open Title="Alarm Summary" WindowName="AlarmSummary" />
                </ClickAnimation>
            </RSIText.Animations>
        </RSIText>-->

        <TextBlock Grid.Column="1" Text="{markupExtensions:CurrentScreenBinding ScreenTitle, Mode=OneWay}" FontSize="16" Margin="5,0,5,0" VerticalAlignment="Center"></TextBlock>
        <RSIButton Grid.Column="2" Padding="10,5" Margin="2,1" Style="{StaticResource FoxboroEvoButton}" IsEnabled="False">ESD</RSIButton>
        <RSIButton Grid.Column="3" Padding="10,5" Margin="2,1" Style="{StaticResource FoxboroEvoButton}" IsEnabled="False">BYPASS</RSIButton>
        <RSIButton Grid.Column="4" Padding="10,5" Margin="2,1" Style="{StaticResource FoxboroEvoButton}" IsEnabled="False">HI HI LEVEL</RSIButton>
        <RSIButton Grid.Column="5" Padding="10,5" Margin="2,1" Style="{StaticResource FoxboroEvoButton}" IsEnabled="False">HI HI H2S</RSIButton>
        <RSIButton Grid.Column="6" Padding="10,5" Margin="2,1" Style="{StaticResource FoxboroEvoButton}" IsEnabled="False">REPORT</RSIButton>
        <RSIToggleButton Grid.Column="7" Padding="10,5" Margin="2,1" Style="{StaticResource FoxboroEvoToggleButton}" IsChecked="{ModelValueBinding Viewer.TAGNAMES}" Width="60">
            <TextBlock FontSize="12" TextAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="13" Margin="0,2,0,0">
                <Run Text="{ModelValueBinding Viewer.TAGNAMES,Converter={IfThenElse ValueIfFalse='SHOW', ValueIfTrue='HIDE'}}" ></Run><LineBreak/>TAG
            </TextBlock>
        </RSIToggleButton>
        <RSIToggleButton Grid.Column="8" Padding="10,5" Margin="2,1" Style="{StaticResource FoxboroEvoToggleButton}" IsChecked="{ModelValueBinding Viewer.DISPLAYUNITS}" Width="60">
            <TextBlock FontSize="12" TextAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="13" Margin="0,2,0,0">
                <Run Text="{ModelValueBinding Viewer.DISPLAYUNITS,Converter={IfThenElse ValueIfFalse='SHOW', ValueIfTrue='HIDE'}}" ></Run><LineBreak/>EU
            </TextBlock>
        </RSIToggleButton>
        <!--<RSIButton Grid.Column="8" Padding="10,5" Margin="2,1" Style="{StaticResource FoxboroEvoButton}" IsEnabled="False">
            <TextBlock FontSize="12" TextAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="13" Margin="0,2,0,0">
                SHOW<LineBreak/>EU
            </TextBlock>
        </RSIButton>-->
        <RSIButton Grid.Column="9" Padding="10,5" Margin="2,1" Style="{StaticResource FoxboroEvoButton}" Command="{AcknowledgeSynopticAlarmsCommand}" CommandParameter="{markupExtensions:CurrentScreenBinding ScreenId}">ACK</RSIButton>
        <RSIButton Grid.Column="10" Margin="2,1" Style="{StaticResource ButtonPath}" Command="{NavigationServiceCommonBinding DisplayPreviousHierarchyPageCommand}" VerticalAlignment="Stretch" local:MyDependencyClass.DataForPath="M0,10 L15,0 15,20">
        </RSIButton>
        <RSIButton Grid.Column="11" Margin="2,1" Style="{StaticResource ButtonPath}"  Command="{NavigationServiceCommonBinding DisplayParentHierarchyPageCommand}" VerticalAlignment="Stretch" local:MyDependencyClass.DataForPath="M0,15 L10,0 20,15">
        </RSIButton>
        <RSIButton Grid.Column="12" Margin="2,1" Style="{StaticResource ButtonPath}" Command="{NavigationServiceCommonBinding DisplayNextHierarchyPageCommand}" VerticalAlignment="Stretch" local:MyDependencyClass.DataForPath="M0,0 L15,10 0,20">
        </RSIButton>
        <RSIButton Grid.Column="13" Padding="10,5" Margin="4,1,1,1" Style="{StaticResource FoxboroEvoButton}" Content="{markupExtensions:CurrentScreenBinding ScreenId}" MinWidth="100"></RSIButton>

    </Grid>
</UserControl>
