<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TrainingApplication01" xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" xmlns:Stencils="clr-namespace:TrainingApplication01.Stencils" xmlns:gauge="http://schemas.actiprosoftware.com/winfx/xaml/gauge">

    <Style x:Key="RSI_Stencil_PVI_Green" TargetType="{x:Type RSI_PVI}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="FontSize" Value="14.667"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HighAlarmColor" Value="Yellow"/>
        <Setter Property="LowLowAlarmColor" Value="Red"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RSI_PVI}">
                    <Grid>
                        <Rectangle HorizontalAlignment="Left" Height="37.467" Grid.RowSpan="1" Stroke="White" VerticalAlignment="Top" Width="108.125" Margin="0,0,-8.125,0"/>
                        <Grid x:Name="Shape">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="Header">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="Tagname" Grid.Column="1" FontSize="12" HorizontalAlignment="Center" Text="{TemplateBinding TagName}" Foreground="White" FontWeight="Bold">
                                    <TextBlock.Visibility>
                                        <TAGNAMESBinding Converter="{BoolToHiddenConverter}" Path="ModelValue">
                                            <TAGNAMESBinding.FallbackValue>
                                                <System:Boolean>True</System:Boolean>
                                            </TAGNAMESBinding.FallbackValue>
                                        </TAGNAMESBinding>
                                    </TextBlock.Visibility>
                                </TextBlock>
                            </Grid>
                            <Grid x:Name="Content" Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="HH_H_Part" Foreground="{TemplateBinding HighAlarmTextColor}" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Top" Visibility="Visible" Grid.Column="1" Margin="92.773,1.954,-21.974,0" Text="{TemplateBinding HighAlarmText}"/>
                                <TextBlock x:Name="LL_L_Part" Foreground="{TemplateBinding LowAlarmTextColor}" FontSize="10" HorizontalAlignment="Center" Text="{TemplateBinding LowAlarmText}" VerticalAlignment="Bottom" Visibility="Visible" Grid.Column="1" Margin="95.167,-8.836,-19.581,17.043"/>
                                <RSIBorder x:Name="NumberPart" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1">
                                    <RSIBorder.Animations>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[HH].Status == 3 OR $TAGNAME.PVAlarms.Alarms[HH].Status == 1">
                                            <Blink CanCreateViewerVariables="True" PropertyName="BorderBrush" To="{TemplateBinding HighHighAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[H].Status == 3 OR $TAGNAME.PVAlarms.Alarms[H].Status == 1" Index="1">
                                            <Blink CanCreateViewerVariables="True" PropertyName="BorderBrush" To="{TemplateBinding HighAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[LL].Status == 3 OR $TAGNAME.PVAlarms.Alarms[LL].Status == 1" Index="2">
                                            <Blink CanCreateViewerVariables="True" PropertyName="BorderBrush" To="{TemplateBinding LowLowAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[L].Status == 3  OR $TAGNAME.PVAlarms.Alarms[L].Status == 1" Index="3">
                                            <Blink CanCreateViewerVariables="True" PropertyName="BorderBrush" To="{TemplateBinding LowAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[HH].Status == 2" Index="4">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="BorderBrush" Value="{TemplateBinding HighHighAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[H].Status == 2" Index="5">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="BorderBrush" Value="{TemplateBinding HighAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[LL].Status == 2" Index="6">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="BorderBrush" Value="{TemplateBinding LowLowAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[L].Status == 2" Index="7">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="BorderBrush" Value="{TemplateBinding LowAlarmColor}"/>
                                        </Animation>
                                    </RSIBorder.Animations>
                                    <Canvas>
                                        <TextBlock Foreground="Green" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Text}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <RSIText  HorizontalAlignment="Left" Height="17.5" TextWrapping="Wrap" Text="\$Tagname.PVUNIT\" VerticalAlignment="Top" Foreground="White" FontSize="14" Width="44.187" Canvas.Left="46.73" Canvas.Top="0.72" Background="Black"/>
                                    </Canvas>
                                </RSIBorder>
                            </Grid>
                        </Grid>
                        <Flash x:Name="Failure" FailureSource="{TemplateBinding Transmitter}" HorizontalAlignment="Right" Margin="0,-3.25,-20,0" Visibility="Visible" VerticalAlignment="Top" Visitor="{Binding RelativeSource={RelativeSource TemplatedParent}}" Foreground="Black" BorderBrush="White"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RSI_Stensil_PVI_Red" TargetType="{x:Type RSI_PVI}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="FontSize" Value="14.667"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HighAlarmColor" Value="Yellow"/>
        <Setter Property="LowLowAlarmColor" Value="Red"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RSI_PVI}">
                    <Grid>
                        <Rectangle HorizontalAlignment="Left" Height="37.467" Grid.RowSpan="1" Stroke="White" VerticalAlignment="Top" Width="108.125" Margin="0,0,-8.125,0"/>
                        <Grid x:Name="Shape">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="Header">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="Tagname" Grid.Column="1" FontSize="12" HorizontalAlignment="Center" Text="{TemplateBinding TagName}" Foreground="White" FontWeight="Bold">
                                    <TextBlock.Visibility>
                                        <TAGNAMESBinding Converter="{BoolToHiddenConverter}" Path="ModelValue">
                                            <TAGNAMESBinding.FallbackValue>
                                                <System:Boolean>True</System:Boolean>
                                            </TAGNAMESBinding.FallbackValue>
                                        </TAGNAMESBinding>
                                    </TextBlock.Visibility>
                                </TextBlock>
                            </Grid>
                            <Grid x:Name="Content" Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="HH_H_Part" Foreground="{TemplateBinding HighAlarmTextColor}" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Top" Visibility="Visible" Grid.Column="1" Margin="93.398,-6.421,-22.599,0" Text="{TemplateBinding HighAlarmText}"/>
                                <TextBlock x:Name="LL_L_Part" Foreground="{TemplateBinding LowAlarmTextColor}" FontSize="10" HorizontalAlignment="Center" Text="{TemplateBinding LowAlarmText}" VerticalAlignment="Bottom" Visibility="Visible" Grid.Column="1" Margin="95.625,0,-20.039,3.668"/>
                                <RSIBorder x:Name="NumberPart" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1">
                                    <RSIBorder.Animations>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[HH].Status == 3 OR $TAGNAME.PVAlarms.Alarms[HH].Status == 1">
                                            <Blink CanCreateViewerVariables="True" PropertyName="BorderBrush" To="{TemplateBinding HighHighAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[H].Status == 3 OR $TAGNAME.PVAlarms.Alarms[H].Status == 1" Index="1">
                                            <Blink CanCreateViewerVariables="True" PropertyName="BorderBrush" To="{TemplateBinding HighAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[LL].Status == 3 OR $TAGNAME.PVAlarms.Alarms[LL].Status == 1" Index="2">
                                            <Blink CanCreateViewerVariables="True" PropertyName="BorderBrush" To="{TemplateBinding LowLowAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[L].Status == 3  OR $TAGNAME.PVAlarms.Alarms[L].Status == 1" Index="3">
                                            <Blink CanCreateViewerVariables="True" PropertyName="BorderBrush" To="{TemplateBinding LowAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[HH].Status == 2" Index="4">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="BorderBrush" Value="{TemplateBinding HighHighAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[H].Status == 2" Index="5">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="BorderBrush" Value="{TemplateBinding HighAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[LL].Status == 2" Index="6">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="BorderBrush" Value="{TemplateBinding LowLowAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[L].Status == 2" Index="7">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="BorderBrush" Value="{TemplateBinding LowAlarmColor}"/>
                                        </Animation>
                                    </RSIBorder.Animations>
                                    <Canvas>
                                        <TextBlock Foreground="Red" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Text}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <RSIText  HorizontalAlignment="Left" Height="17.5" TextWrapping="Wrap" Text="\$Tagname.PVUNIT\" VerticalAlignment="Top" Foreground="White" FontSize="14" Width="44.187" Canvas.Left="46.73" Canvas.Top="0.72" Background="Black"/>
                                    </Canvas>
                                </RSIBorder>
                            </Grid>
                        </Grid>
                        <Flash x:Name="Failure" FailureSource="{TemplateBinding Transmitter}" HorizontalAlignment="Right" Margin="0,-3.25,-20,0" Visibility="Visible" VerticalAlignment="Top" Visitor="{Binding RelativeSource={RelativeSource TemplatedParent}}" Foreground="Black" BorderBrush="White"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RSI_Stencil_PID_Red" TargetType="{x:Type RSI_PID}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="FontSize" Value="14.667"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HighAlarmColor" Value="Yellow"/>
        <Setter Property="LowLowAlarmColor" Value="Red"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RSI_PID}">
                    <Grid Height="54.717" Width="109.375">
                        <Grid x:Name="Shape">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="Header">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="2"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="Tagname" Grid.Column="1" FontSize="12" HorizontalAlignment="Left" Text="{TemplateBinding TagName}" Foreground="White" Margin="2.499,0,0,0">
                                    <TextBlock.Visibility>
                                        <TAGNAMESBinding Converter="{BoolToHiddenConverter}" Path="ModelValue">
                                            <TAGNAMESBinding.FallbackValue>
                                                <System:Boolean>True</System:Boolean>
                                            </TAGNAMESBinding.FallbackValue>
                                        </TAGNAMESBinding>
                                    </TextBlock.Visibility>
                                </TextBlock>
                                <RSIText x:Name="Manual_Auto" Grid.Column="1" Foreground="#FFFF8000" FontSize="11" Text="M" Margin="70.811,0,11.688,0">
                                    <RSIText.Animations>
                                        <Animation Condition="$TAGNAME.MODE = 3">
                                            <ChangeText CanCreateViewerVariables="True" Text="A"/>
                                            <ChangePropertyValue CanCreateViewerVariables="True" Index="1" PropertyName="Foreground" Value="#FFFF8000"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.MODE = 4 OR $TAGNAME.MODE = 5" Index="1">
                                            <ChangeText CanCreateViewerVariables="True" Text="C"/>
                                            <ChangePropertyValue CanCreateViewerVariables="True" Index="1" PropertyName="Foreground" Value="Green"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PSW != 0" Index="2">
                                            <ChangeText CanCreateViewerVariables="True" Text="LO"/>
                                            <ChangePropertyValue CanCreateViewerVariables="True" Index="1" PropertyName="Foreground" Value="Red"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.MODE = 1" Index="3">
                                            <ChangeText CanCreateViewerVariables="True" Text="IM"/>
                                            <ChangePropertyValue CanCreateViewerVariables="True" Index="1" PropertyName="Foreground" Value="#FFFF8000"/>
                                        </Animation>
                                    </RSIText.Animations>
                                </RSIText>
                            </Grid>
                            <Grid x:Name="Content" Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="HH_H_Part" Foreground="{TemplateBinding HighAlarmTextColor}" FontSize="10" HorizontalAlignment="Center" Text="{TemplateBinding HighAlarmText}" VerticalAlignment="Top" Grid.Column="1" Margin="96.212,0,-16.038,0"/>
                                <TextBlock x:Name="LL_L_Part" Foreground="{TemplateBinding LowAlarmTextColor}" FontSize="10" HorizontalAlignment="Center" Text="{TemplateBinding LowAlarmText}" VerticalAlignment="Bottom" Grid.Column="1" Margin="99.105,0,-14.145,13.5"/>
                                <RSIBorder x:Name="NumberPart" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1">
                                    <RSIBorder.Animations>
                                        <Animation Condition="$TAGNAME.MODE = 1">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="Background" Value="#FFC9C9C9"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[HH].Status == 3 OR $TAGNAME.PVAlarms.Alarms[HH].Status == 1" Index="1">
                                            <Blink CanCreateViewerVariables="True" PropertyName="BorderBrush" To="{TemplateBinding HighHighAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[H].Status == 3 OR $TAGNAME.PVAlarms.Alarms[H].Status == 1" Index="2">
                                            <Blink CanCreateViewerVariables="True" PropertyName="BorderBrush" To="{TemplateBinding HighAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[LL].Status == 3 OR $TAGNAME.PVAlarms.Alarms[LL].Status == 1" Index="3">
                                            <Blink CanCreateViewerVariables="True" PropertyName="BorderBrush" To="{TemplateBinding LowLowAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[L].Status == 3  OR $TAGNAME.PVAlarms.Alarms[L].Status == 1" Index="4">
                                            <Blink CanCreateViewerVariables="True" PropertyName="BorderBrush" To="{TemplateBinding LowAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[HH].Status == 2" Index="5">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="BorderBrush" Value="{TemplateBinding HighHighAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[H].Status == 2" Index="6">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="BorderBrush" Value="{TemplateBinding HighAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[LL].Status == 2" Index="7">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="BorderBrush" Value="{TemplateBinding LowLowAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[L].Status == 2" Index="8">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="BorderBrush" Value="{TemplateBinding LowAlarmColor}"/>
                                        </Animation>
                                    </RSIBorder.Animations>
                                    <Canvas>
                                        <TextBlock Foreground="Red" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Text}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <RSIText  HorizontalAlignment="Left" Height="17.5" TextWrapping="Wrap" Text="\$Tagname.PVUNIT\" VerticalAlignment="Top" Foreground="Cyan" FontSize="14" Width="44.915" Canvas.Left="46.73" Canvas.Top="0.72" Background="Black"/>
                                        <RSIText x:Name="SP_VALUE"  HorizontalAlignment="Left" Height="17.5" TextWrapping="Wrap" Text="\$Tagname.SP:###.#\" VerticalAlignment="Top" Foreground="Cyan" FontSize="14" Width="54.165" Canvas.Top="18.007" Background="Black" Canvas.Left="37.48"/>
                                        <TextBlock x:Name="SP" HorizontalAlignment="Left" Height="17.5" TextWrapping="Wrap" Text="SP" VerticalAlignment="Top" Foreground="Cyan" FontSize="14" Width="16.645" Canvas.Top="18.007" Background="Black"/>
                                    </Canvas>
                                </RSIBorder>
                            </Grid>
                        </Grid>
                        <Flash x:Name="Failure" FailureSource="{TemplateBinding Transmitter}" HorizontalAlignment="Right" Margin="0,-6.375,-12.25,0" Visibility="Visible" VerticalAlignment="Top" Visitor="{Binding RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="White"/>
                        <Rectangle HorizontalAlignment="Left" Height="53.842" Grid.RowSpan="1" Stroke="White" VerticalAlignment="Top" Width="94.375" Margin="14.375,0,-8.75,-16.375"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RSI_Stencil_PID_Green" TargetType="{x:Type RSI_PID}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="FontSize" Value="14.667"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HighAlarmColor" Value="Yellow"/>
        <Setter Property="LowLowAlarmColor" Value="Red"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RSI_PID}">
                    <Grid Height="54.717" Width="109.375">
                        <Grid x:Name="Shape">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="Header">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="2"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="Tagname" Grid.Column="1" FontSize="12" HorizontalAlignment="Left" Text="{TemplateBinding TagName}" Foreground="White" Margin="2.499,0,0,0">
                                    <TextBlock.Visibility>
                                        <TAGNAMESBinding Converter="{BoolToHiddenConverter}" Path="ModelValue">
                                            <TAGNAMESBinding.FallbackValue>
                                                <System:Boolean>True</System:Boolean>
                                            </TAGNAMESBinding.FallbackValue>
                                        </TAGNAMESBinding>
                                    </TextBlock.Visibility>
                                </TextBlock>
                                <Canvas>
                                    <RSIText x:Name="Manual_Auto" Grid.Column="1" Foreground="#FFFF8000" FontSize="11" Text="M" Margin="0" Canvas.Left="83.248">
                                        <RSIText.Animations>
                                            <Animation Condition="$TAGNAME.MODE = 3">
                                                <ChangeText CanCreateViewerVariables="True" Text="A"/>
                                                <ChangePropertyValue CanCreateViewerVariables="True" Index="1" PropertyName="Foreground" Value="#FFFF8000"/>
                                            </Animation>
                                            <Animation Condition="$TAGNAME.PSW != 0" Index="2">
                                                <ChangeText CanCreateViewerVariables="True" Text="LO"/>
                                                <ChangePropertyValue CanCreateViewerVariables="True" Index="1" PropertyName="Foreground" Value="Red"/>
                                            </Animation>
                                            <Animation Condition="$TAGNAME.MODE = 1" Index="3">
                                                <ChangeText CanCreateViewerVariables="True" Text="IM"/>
                                                <ChangePropertyValue CanCreateViewerVariables="True" Index="1" PropertyName="Foreground" Value="#FFFF8000"/>
                                            </Animation>
                                        </RSIText.Animations>
                                    </RSIText>
                                    <RSIText x:Name="Cascade" Grid.Column="1" Foreground="#FFFF8000" FontSize="11" Text="C" Margin="0" Canvas.Left="96.248">
                                        <RSIText.Animations>
                                            <Animation Condition="$TAGNAME.MODE = 4 OR $TAGNAME.MODE = 5" Index="1">
                                                <SetVisible/>
                                            </Animation>
                                        </RSIText.Animations>

                                    </RSIText>
                                </Canvas>
                            </Grid>
                            <Grid x:Name="Content" Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="HH_H_Part" Foreground="{TemplateBinding HighAlarmTextColor}" FontSize="10" HorizontalAlignment="Center" Text="{TemplateBinding HighAlarmText}" VerticalAlignment="Top" Grid.Column="1" Margin="96.212,0,-16.038,0"/>
                                <TextBlock x:Name="LL_L_Part" Foreground="{TemplateBinding LowAlarmTextColor}" FontSize="10" HorizontalAlignment="Center" Text="{TemplateBinding LowAlarmText}" VerticalAlignment="Bottom" Grid.Column="1" Margin="99.105,0,-14.145,13.5"/>
                                <RSIBorder x:Name="NumberPart" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1">
                                    <RSIBorder.Animations>
                                        <Animation Condition="$TAGNAME.MODE = 1">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="Background" Value="#FFC9C9C9"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[HH].Status == 3 OR $TAGNAME.PVAlarms.Alarms[HH].Status == 1" Index="1">
                                            <Blink CanCreateViewerVariables="True" PropertyName="BorderBrush" To="{TemplateBinding HighHighAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[H].Status == 3 OR $TAGNAME.PVAlarms.Alarms[H].Status == 1" Index="2">
                                            <Blink CanCreateViewerVariables="True" PropertyName="BorderBrush" To="{TemplateBinding HighAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[LL].Status == 3 OR $TAGNAME.PVAlarms.Alarms[LL].Status == 1" Index="3">
                                            <Blink CanCreateViewerVariables="True" PropertyName="BorderBrush" To="{TemplateBinding LowLowAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[L].Status == 3  OR $TAGNAME.PVAlarms.Alarms[L].Status == 1" Index="4">
                                            <Blink CanCreateViewerVariables="True" PropertyName="BorderBrush" To="{TemplateBinding LowAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[HH].Status == 2" Index="5">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="BorderBrush" Value="{TemplateBinding HighHighAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[H].Status == 2" Index="6">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="BorderBrush" Value="{TemplateBinding HighAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[LL].Status == 2" Index="7">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="BorderBrush" Value="{TemplateBinding LowLowAlarmColor}"/>
                                        </Animation>
                                        <Animation Condition="$TAGNAME.PVAlarms.Alarms[L].Status == 2" Index="8">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="BorderBrush" Value="{TemplateBinding LowAlarmColor}"/>
                                        </Animation>
                                    </RSIBorder.Animations>
                                    <Canvas>
                                        <TextBlock Foreground="Green" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Text}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <RSIText  HorizontalAlignment="Left" Height="17.5" TextWrapping="Wrap" Text="\$Tagname.PVUNIT\" VerticalAlignment="Top" Foreground="Cyan" FontSize="14" Width="44.915" Canvas.Left="46.73" Canvas.Top="0.72" Background="Black"/>
                                        <RSIText x:Name="SP_VALUE"  HorizontalAlignment="Left" Height="17.5" TextWrapping="Wrap" Text="\$Tagname.SP:###.#\" VerticalAlignment="Top" Foreground="Cyan" FontSize="14" Width="54.165" Canvas.Top="18.007" Background="Black" Canvas.Left="37.48"/>
                                        <TextBlock x:Name="SP" HorizontalAlignment="Left" Height="17.5" TextWrapping="Wrap" Text="SP" VerticalAlignment="Top" Foreground="Cyan" FontSize="14" Width="16.645" Canvas.Top="18.007" Background="Black"/>
                                    </Canvas>
                                </RSIBorder>
                            </Grid>
                        </Grid>
                        <Flash x:Name="Failure" FailureSource="{TemplateBinding Transmitter}" HorizontalAlignment="Right" Margin="0,-6.375,-12.25,0" Visibility="Visible" VerticalAlignment="Top" Visitor="{Binding RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="White"/>
                        <Rectangle HorizontalAlignment="Left" Height="53.842" Grid.RowSpan="1" Stroke="White" VerticalAlignment="Top" Width="94.375" Margin="14.375,0,-8.75,-16.375"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RSI_Stencil_Pump" TargetType="{x:Type RSI_Pump}">
        <Setter Property="Width" Value="90"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RSI_Pump}">
                    <RSICanvas>
                        <RSICanvas x:Name="Shape" Background="{TemplateBinding Background}">
                            <RSIRectangle x:Name="R2" Height="18.5" Canvas.Left="37.453" Canvas.Top="7.375" Width="33.625" Fill="{Binding MotorActuator.CurrentColor, RelativeSource={RelativeSource TemplatedParent}}">
                                <!--<RSIRectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF49C658"/>
                                        <GradientStop Color="#FF95F593" Offset="0.5"/>
                                        <GradientStop Color="#FF49C658" Offset="1"/>
                                    </LinearGradientBrush>
                                </RSIRectangle.Fill>-->
                            </RSIRectangle>
                            <RSIRectangle x:Name="R1" Height="25.375" Canvas.Left="70.634" Canvas.Top="3.625" Width="8.625" Fill="{Binding MotorActuator.CurrentColor, RelativeSource={RelativeSource TemplatedParent}}" >
                                <!--<RSIRectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF49C658" Offset="0"/>
                                    <GradientStop Color="#FF94F493" Offset="0.5"/>
                                    <GradientStop Color="#FF49C658" Offset="1"/>
                                </LinearGradientBrush>
                            </RSIRectangle.Fill>-->
                            </RSIRectangle>
                            <RSIRectangle x:Name="R3" Height="15.187" Canvas.Left="12.473" Canvas.Top="17.5" Width="5.833" Fill="{Binding MotorActuator.CurrentColor, RelativeSource={RelativeSource TemplatedParent}}">
                                <!--<RSIRectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF49C658" Offset="0"/>
                                        <GradientStop Color="#FF95F593" Offset="0.5"/>
                                        <GradientStop Color="#FF49C658" Offset="1"/>
                                    </LinearGradientBrush>
                                </RSIRectangle.Fill>-->
                            </RSIRectangle>
                            <Path x:Name="Path1" Data="M820.4375,849.625 L806.9995,861.5625 863.12446,861.5005 849.37447,849.12498 z" HorizontalAlignment="Left" Height="12.437" Stretch="Fill" VerticalAlignment="Top" Width="56.125" Canvas.Left="12.223" Canvas.Top="39.125" Fill="{Binding MotorActuator.CurrentColor, RelativeSource={RelativeSource TemplatedParent}}" >
                                <!--<Path.Fill>
                                    <LinearGradientBrush EndPoint="1,1" MappingMode="RelativeToBoundingBox" StartPoint="0,1">
                                        <GradientStop Color="#FF49C658" Offset="0"/>
                                        <GradientStop Color="#FF95F593" Offset="0.5"/>
                                        <GradientStop Color="#FF49C658" Offset="1"/>
                                    </LinearGradientBrush>
                                </Path.Fill>-->
                            </Path>
                            <Ellipse x:Name="E1" HorizontalAlignment="Left" Height="36.625" VerticalAlignment="Top" Width="43.25" Canvas.Left="18.098" Canvas.Top="7.375" Fill="{Binding MotorActuator.CurrentColor, RelativeSource={RelativeSource TemplatedParent}}" >
                                <!--<Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FF49C658" Offset="0"/>
                                        <GradientStop Color="#FF95F593" Offset="0.5"/>
                                        <GradientStop Color="#FF49C658" Offset="1"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>-->
                            </Ellipse>
                            <Ellipse HorizontalAlignment="Left" Height="10.5" VerticalAlignment="Top" Width="11.125" Canvas.Left="34.223" Canvas.Top="20.437">
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FF8184A2" Offset="0"/>
                                        <GradientStop Color="#FF8184A2" Offset="0.758"/>
                                        <GradientStop Color="#FFDBF0DC" Offset="1"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </RSICanvas>
                        <RSIText Height="15.625" TextWrapping="Wrap" Text="$TAGNAME" Width="76.333" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Canvas.Top="-15.625" Canvas.Left="13.667"/>
                        <RSIText Height="14.875" TextWrapping="Wrap" Text="A" Width="8" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Canvas.Top="45.125" Canvas.Left="1.625" Visibility="Hidden" >
                            <RSIText.Animations>
                                <Animation Condition="M_$TAGNAME.Mode == 0">
                                    <ChangeColor Color="Red"/>
                                    <SetVisible/>
                                </Animation>
                            </RSIText.Animations>
                        </RSIText>
                        <Flash FailureSource="{Binding MotorActuator.Unit, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Right" Margin="0" Visibility="Visible" VerticalAlignment="Top" Visitor="{Binding RelativeSource={RelativeSource TemplatedParent}}" Canvas.Left="90" Canvas.Top="-10" BorderBrush="White"/>
                    </RSICanvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="West">
                            <Setter Property="RenderTransform" TargetName="Shape">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="-1"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" Value="90,0,0,0" TargetName="Shape"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RSI_Stencil_ControlValve" TargetType="{x:Type RSI_ControlValve}">
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RSI_ControlValve}">
                    <RSIGrid>
                        <RSIGrid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </RSIGrid.ColumnDefinitions>
                        <RSIGrid Background="{TemplateBinding Background}" Grid.Column="1">
                            <RSIGrid x:Name="path" RenderTransformOrigin="0.5,0.5">
                                <RSIPath Data="M19.312496,0 C27.079002,0 33.374996,5.2440891 33.374996,11.712999 L20.311996,11.712998 20.311996,32.486068 39.246742,21.468491 39.375,45.087997 19.670812,33.124997 19.213936,33.124997 0,44.305029 0.25651414,21.337997 18.687996,32.528299 18.687996,11.712998 5.2499959,11.712997 C5.2499959,5.2440891 11.545992,0 19.312496,0 z" Fill="{Binding ValveActuator.CurrentColor, RelativeSource={RelativeSource TemplatedParent}}" Height="Auto" Stretch="Fill" Width="Auto" Margin="2.875,0,2.75,0">
                                    <!--<RSIPath.Animations>
                                        <Animation Condition="$VALVEACTUATOR.ESDSensitive = true AND $VALVEACTUATOR.ESDAction = 0">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="Data" Value="M48,21 L38,36 58,36 z M48.08125,35.991707 L48.213083,54.799194 M92.416664,36.757896 L92.083336,72.591228 48.244492,54.607735 z M2.9999995,36.047619 L48.244492,54.607735 2.9166665,72.924564 z M43.070313,1.0046501 C44.35677,0.99162912 45.666668,1.0059524 47,1.0476184 70.333336,1.7142854 86,8.0476189 94,20.047619 L48,20.047619 1,20.047619 C9.75,7.5476189 23.773438,1.1999626 43.070313,1.0046501 z"/>
                                        </Animation>
                                        <Animation Condition="$VALVEACTUATOR.ESDSensitive = true AND $VALVEACTUATOR.ESDAction = 1" Index="1">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="Data" Value="M48,53 L38,38 58,38 z M47.909677,20.326612 L48.028409,38.055452 M92.416664,36.757896 L92.083336,72.591228 48.244492,54.607735 z M2.9999995,36.047619 L48.244492,54.607735 2.9166665,72.924564 z M43.070313,1.0046501 C44.35677,0.99162912 45.666668,1.0059524 47,1.0476184 70.333336,1.7142854 86,8.0476189 94,20.047619 L48,20.047619 1,20.047619 C9.75,7.5476189 23.773438,1.1999626 43.070313,1.0046501 z"/>
                                        </Animation>
                                        <Animation Condition="$VALVEACTUATOR.ESDSensitive = true AND $VALVEACTUATOR.ESDAction &gt; 1" Index="2">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="Data" Value="M47.909677,20.326612L48.213083,54.799194 M92.416664,36.757896L92.083336,72.591228 48.244492,54.607735z M2.9999995,36.047619L48.244492,54.607735 2.9166665,72.924564z M43.070313,1.0046501C44.35677,0.99162912 45.666668,1.0059524 47,1.0476184 70.333336,1.7142854 86,8.0476189 94,20.047619L48,20.047619 1,20.047619C9.75,7.5476189,23.773438,1.1999626,43.070313,1.0046501z M59,37L38,37 M59,33L38,33"/>
                                        </Animation>
                                    </RSIPath.Animations>-->
                                </RSIPath>
                            </RSIGrid>
                            <Flash x:Name="Flash" FailureSource="{Binding ValveActuator.Unit, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Right" Margin="0,-10,-10,0" Visibility="Visible" VerticalAlignment="Top" Visitor="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                        </RSIGrid>
                        <Grid x:Name="Tagname" Grid.Column="1" HorizontalAlignment="Center" Margin="-200,0,-200,-15" VerticalAlignment="Bottom">
                            <TextBlock x:Name="textTagname" HorizontalAlignment="Center" TextAlignment="Center" Text="{TemplateBinding TagName}" VerticalAlignment="Center" Foreground="#FF15F715">
                                <TextBlock.Visibility>
                                    <TAGNAMESBinding Converter="{BoolToHiddenConverter}" Path="ModelValue">
                                        <TAGNAMESBinding.FallbackValue>
                                            <System:Boolean>True</System:Boolean>
                                        </TAGNAMESBinding.FallbackValue>
                                    </TAGNAMESBinding>
                                </TextBlock.Visibility>
                            </TextBlock>
                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" VerticalAlignment="Center">
                                <StackPanel.Visibility>
                                    <Binding ElementName="textTagname" Path="Visibility">
                                        <Binding.Converter>
                                            <VisibilityToInverseVisibility>
                                                <VisibilityToInverseVisibility.FallbackValue>
                                                    <Visibility>Visible</Visibility>
                                                </VisibilityToInverseVisibility.FallbackValue>
                                            </VisibilityToInverseVisibility>
                                        </Binding.Converter>
                                    </Binding>
                                </StackPanel.Visibility>
                                <RSIText Text="\$VALVEACTUATOR.OpeningCommand:#.#\" Foreground="Green" FontWeight="Bold"/>
                                <TextBlock Visibility="Visible" Foreground="White"><Run Text=" %"/></TextBlock>
                            </StackPanel>
                        </Grid>
                    </RSIGrid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="West">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalAlignment" TargetName="Tagname" Value="Left"/>
                            <Setter Property="VerticalAlignment" TargetName="Tagname" Value="Center"/>
                            <Setter Property="Margin" TargetName="Tagname" Value="0,0,-200,0"/>
                            <Setter Property="Grid.Column" TargetName="Tagname" Value="2"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="East">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalAlignment" TargetName="Tagname" Value="Right"/>
                            <Setter Property="VerticalAlignment" TargetName="Tagname" Value="Center"/>
                            <Setter Property="Margin" TargetName="Tagname" Value="-200,0,0,0"/>
                            <Setter Property="Grid.Column" TargetName="Tagname" Value="0"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="South">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <RotateTransform Angle="180"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalAlignment" TargetName="Tagname" Value="Center"/>
                            <Setter Property="VerticalAlignment" TargetName="Tagname" Value="Top"/>
                            <Setter Property="Margin" TargetName="Tagname" Value="-200,-20,-200,0"/>
                            <Setter Property="Grid.Column" TargetName="Tagname" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RSI_Stencil_ControlValve_Red" TargetType="{x:Type RSI_ControlValve}">
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RSI_ControlValve}">
                    <RSIGrid>
                        <RSIGrid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </RSIGrid.ColumnDefinitions>
                        <RSIGrid Background="{TemplateBinding Background}" Grid.Column="1">
                            <RSIGrid x:Name="path" RenderTransformOrigin="0.5,0.5">
                                <RSIPath Data="M19.312496,0 C27.079002,0 33.374996,5.2440891 33.374996,11.712999 L20.311996,11.712998 20.311996,32.486068 39.246742,21.468491 39.375,45.087997 19.670812,33.124997 19.213936,33.124997 0,44.305029 0.25651414,21.337997 18.687996,32.528299 18.687996,11.712998 5.2499959,11.712997 C5.2499959,5.2440891 11.545992,0 19.312496,0 z" Fill="{Binding ValveActuator.CurrentColor, RelativeSource={RelativeSource TemplatedParent}}" Height="Auto" Stretch="Fill" Width="Auto" Margin="2.875,0,2.75,0">
                                    <!--<RSIPath.Animations>
                                        <Animation Condition="$VALVEACTUATOR.ESDSensitive = true AND $VALVEACTUATOR.ESDAction = 0">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="Data" Value="M48,21 L38,36 58,36 z M48.08125,35.991707 L48.213083,54.799194 M92.416664,36.757896 L92.083336,72.591228 48.244492,54.607735 z M2.9999995,36.047619 L48.244492,54.607735 2.9166665,72.924564 z M43.070313,1.0046501 C44.35677,0.99162912 45.666668,1.0059524 47,1.0476184 70.333336,1.7142854 86,8.0476189 94,20.047619 L48,20.047619 1,20.047619 C9.75,7.5476189 23.773438,1.1999626 43.070313,1.0046501 z"/>
                                        </Animation>
                                        <Animation Condition="$VALVEACTUATOR.ESDSensitive = true AND $VALVEACTUATOR.ESDAction = 1" Index="1">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="Data" Value="M48,53 L38,38 58,38 z M47.909677,20.326612 L48.028409,38.055452 M92.416664,36.757896 L92.083336,72.591228 48.244492,54.607735 z M2.9999995,36.047619 L48.244492,54.607735 2.9166665,72.924564 z M43.070313,1.0046501 C44.35677,0.99162912 45.666668,1.0059524 47,1.0476184 70.333336,1.7142854 86,8.0476189 94,20.047619 L48,20.047619 1,20.047619 C9.75,7.5476189 23.773438,1.1999626 43.070313,1.0046501 z"/>
                                        </Animation>
                                        <Animation Condition="$VALVEACTUATOR.ESDSensitive = true AND $VALVEACTUATOR.ESDAction &gt; 1" Index="2">
                                            <ChangePropertyValue CanCreateViewerVariables="True" PropertyName="Data" Value="M47.909677,20.326612L48.213083,54.799194 M92.416664,36.757896L92.083336,72.591228 48.244492,54.607735z M2.9999995,36.047619L48.244492,54.607735 2.9166665,72.924564z M43.070313,1.0046501C44.35677,0.99162912 45.666668,1.0059524 47,1.0476184 70.333336,1.7142854 86,8.0476189 94,20.047619L48,20.047619 1,20.047619C9.75,7.5476189,23.773438,1.1999626,43.070313,1.0046501z M59,37L38,37 M59,33L38,33"/>
                                        </Animation>
                                    </RSIPath.Animations>-->
                                </RSIPath>
                            </RSIGrid>
                            <Flash x:Name="Flash" FailureSource="{Binding ValveActuator.Unit, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Right" Margin="0,-10,-10,0" Visibility="Visible" VerticalAlignment="Top" Visitor="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                        </RSIGrid>
                        <Grid x:Name="Tagname" Grid.Column="1" HorizontalAlignment="Center" Margin="-200,0,-200,-15" VerticalAlignment="Bottom">
                            <TextBlock x:Name="textTagname" HorizontalAlignment="Center" TextAlignment="Center" Text="{TemplateBinding TagName}" VerticalAlignment="Center" Foreground="Red">
                                <TextBlock.Visibility>
                                    <TAGNAMESBinding Converter="{BoolToHiddenConverter}" Path="ModelValue">
                                        <TAGNAMESBinding.FallbackValue>
                                            <System:Boolean>True</System:Boolean>
                                        </TAGNAMESBinding.FallbackValue>
                                    </TAGNAMESBinding>
                                </TextBlock.Visibility>
                            </TextBlock>
                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" VerticalAlignment="Center">
                                <StackPanel.Visibility>
                                    <Binding ElementName="textTagname" Path="Visibility">
                                        <Binding.Converter>
                                            <VisibilityToInverseVisibility>
                                                <VisibilityToInverseVisibility.FallbackValue>
                                                    <Visibility>Visible</Visibility>
                                                </VisibilityToInverseVisibility.FallbackValue>
                                            </VisibilityToInverseVisibility>
                                        </Binding.Converter>
                                    </Binding>
                                </StackPanel.Visibility>
                                <RSIText Text="\$VALVEACTUATOR.OpeningCommand:#.#\" Foreground="Red" FontWeight="Bold"/>
                                <TextBlock Visibility="Visible" Foreground="White"><Run Text=" %"/></TextBlock>
                            </StackPanel>
                        </Grid>
                    </RSIGrid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="West">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalAlignment" TargetName="Tagname" Value="Left"/>
                            <Setter Property="VerticalAlignment" TargetName="Tagname" Value="Center"/>
                            <Setter Property="Margin" TargetName="Tagname" Value="0,0,-200,0"/>
                            <Setter Property="Grid.Column" TargetName="Tagname" Value="2"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="East">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalAlignment" TargetName="Tagname" Value="Right"/>
                            <Setter Property="VerticalAlignment" TargetName="Tagname" Value="Center"/>
                            <Setter Property="Margin" TargetName="Tagname" Value="-200,0,0,0"/>
                            <Setter Property="Grid.Column" TargetName="Tagname" Value="0"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="South">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <RotateTransform Angle="180"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalAlignment" TargetName="Tagname" Value="Center"/>
                            <Setter Property="VerticalAlignment" TargetName="Tagname" Value="Top"/>
                            <Setter Property="Margin" TargetName="Tagname" Value="-200,-20,-200,0"/>
                            <Setter Property="Grid.Column" TargetName="Tagname" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RSI_Stencil_BlockValve" TargetType="{x:Type RSI_BlockValve}">
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RSI_BlockValve}">
                    <RSIGrid>
                        <RSIGrid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </RSIGrid.ColumnDefinitions>
                        <RSIGrid Background="{TemplateBinding Background}" Grid.Column="1">
                            <RSIGrid x:Name="path" RenderTransformOrigin="0.5,0.5">
                                <RSILine HorizontalAlignment="Left" Height="13.621" Stroke="White" StrokeThickness="2" VerticalAlignment="Top" Width="2" Orientation="Vertical" Margin="22.006,18.797,0,0"/>
                                <RSIPath Data="M444.875,186.25 L483,209 482.875,186.375 444.625,208.25 z" Fill="{TemplateBinding CurrentColor}" Stretch="Fill" Height="Auto" Width="Auto" Margin="3.485,20.731,2.14,0.519"/>
                                <RSIRectangle Stroke="White" StrokeThickness="2" RenderTransformOrigin="0.5,0.5" Margin="22.534,-0.823,20.466,23.927">
                                    <RSIRectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="51.904"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </RSIRectangle.RenderTransform>
                                </RSIRectangle>
                                <RSIRectangle Stroke="White" StrokeThickness="2" RenderTransformOrigin="0.5,0.5" Margin="22.527,-0.927,20.473,23.502">
                                    <RSIRectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-51.632"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </RSIRectangle.RenderTransform>
                                </RSIRectangle>
                                <RSIRectangle Stroke="White" StrokeThickness="2" Margin="12.88,16.797,10.995,26.203"/>
                                <RSIRectangle Stroke="White" StrokeThickness="2" Margin="12.88,1.25,10.995,41.75"/>
                                <RSIRectangle Stroke="White" StrokeThickness="2" Margin="32.005,1.25,10.995,26.333"/>
                                <RSIRectangle Stroke="White" StrokeThickness="2" Margin="12.88,1.25,30.12,26.333"/>
                                <RSIText x:Name="Value" Grid.Column="1" HorizontalAlignment="Center" Margin="-2.405,0,-2.405,-15" TextAlignment="Center" Text="\$VALVEACTUATOR.OpeningCommand:#.#\" VerticalAlignment="Bottom" Foreground="White" Grid.ColumnSpan="2" FontWeight="Bold"/>
                                <Flash x:Name="Flash" HorizontalAlignment="Right" Margin="-10" Visibility="Visible" VerticalAlignment="Top" Visitor="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                            </RSIGrid>
                        </RSIGrid>
                        <TextBlock x:Name="Tagname" Grid.Column="1" HorizontalAlignment="Center" Margin="-200,0,-200,-15" TextAlignment="Center" Text="{TemplateBinding TagName}" VerticalAlignment="Bottom" Foreground="White" Visibility="Hidden">
                            <!--<TextBlock.Visibility>
                                <TAGNAMESBinding Converter="{BoolToHiddenConverter}" Path="ModelValue">
                                    <TAGNAMESBinding.FallbackValue>
                                        <System:Boolean>True</System:Boolean>
                                    </TAGNAMESBinding.FallbackValue>
                                </TAGNAMESBinding>
                            </TextBlock.Visibility>-->
                        </TextBlock>
                        <!--<RSIText x:Name="Value" Grid.Column="1" HorizontalAlignment="Center" Margin="-2.405,0,-2.405,-15" TextAlignment="Center" Text="\$VALVEACTUATOR.OpeningCommand:#.#\" VerticalAlignment="Bottom" Foreground="White" Grid.ColumnSpan="2" FontWeight="Bold"/>-->
                    </RSIGrid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="West">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalAlignment" TargetName="Tagname" Value="Left"/>
                            <Setter Property="VerticalAlignment" TargetName="Tagname" Value="Center"/>
                            <Setter Property="Margin" TargetName="Tagname" Value="0,0,-200,0"/>
                            <Setter Property="Grid.Column" TargetName="Tagname" Value="2"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="East">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalAlignment" TargetName="Tagname" Value="Right"/>
                            <Setter Property="VerticalAlignment" TargetName="Tagname" Value="Center"/>
                            <Setter Property="Margin" TargetName="Tagname" Value="-200,0,0,0"/>
                            <Setter Property="Grid.Column" TargetName="Tagname" Value="0"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="South">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <RotateTransform Angle="180"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalAlignment" TargetName="Tagname" Value="Center"/>
                            <Setter Property="VerticalAlignment" TargetName="Tagname" Value="Top"/>
                            <Setter Property="Margin" TargetName="Tagname" Value="-200,-20,-200,0"/>
                            <Setter Property="Grid.Column" TargetName="Tagname" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RSI_Stencil_Navigation" TargetType="{x:Type RSI_Navigation}">
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RSI_Navigation}">
                    <Grid>
                        <Grid>
                            <Grid.LayoutTransform>
                                <RotateTransform Angle="{Binding Angle, RelativeSource={RelativeSource TemplatedParent}}" CenterY="0.5" CenterX="0.5"/>
                            </Grid.LayoutTransform>
                            <!--<Path x:Name="PART_Background" Data="M0,2L6,2 6,3 7.5,0 6,-3 6,-2 0,-2z" Fill="{TemplateBinding Background}" Stretch="Fill"/>
                            <Path x:Name="opacity_background" Data="M0,2L6,2 6,3 7.5,0 6,-3 6,-2 0,-2z" Stretch="Fill" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}">
                                <Path.Fill>
                                    <LinearGradientBrush EndPoint="1,1" StartPoint="1,0">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="White" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>-->
                            <Path Fill="#FF8A8583" HorizontalAlignment="Left" Height="20.25" VerticalAlignment="Top" Data="M0.5,0.5 L70.078003,0.5 70.078003,0.53058636 70.401283,0.53014058 79.746979,10.098264 70.427704,19.692123 70.078003,19.692606 70.078003,19.75 0.5,19.75 z" Margin="0,5,0,0" Stretch="Fill" Width="80.247">
                                <Path.Stroke>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FF4E4E54" Offset="1"/>
                                    </LinearGradientBrush>
                                </Path.Stroke>
                            </Path>
                        </Grid>
                        <TextBlock FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Center" Text="{TemplateBinding Text}" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RSI_Stencil_StdGauge" TargetType="{x:Type RSI_StdGauge}">
        <Setter Property="Width" Value="90"/>
        <Setter Property="Height" Value="90"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="Gray" Offset="0.5"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Color">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <LinearGradientBrush.RelativeTransform>
                        <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                    </LinearGradientBrush.RelativeTransform>
                    <GradientStop Color="Red" Offset="0"/>
                    <GradientStop Color="Red" Offset="1"/>
                    <GradientStop Color="Red" Offset="0.5"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="TickColor" Value="Gray"/>
        <Setter Property="TickFrequency" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RSI_StdGauge}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Slider Background="{TemplateBinding TickColor}" Grid.Column="0" Foreground="{TemplateBinding LeftSliderColor}" IsEnabled="False" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Opacity="{TemplateBinding LeftSliderSize}" Orientation="Vertical" TickFrequency="{TemplateBinding TickFrequency}" Visibility="{TemplateBinding IsLeftSliderDisplayed, Converter={UniversalConverter}}" Value="{TemplateBinding LeftSliderValue}">
                            <Slider.Style>
                                <Style TargetType="{x:Type Slider}">
                                    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
                                    <Setter Property="Opacity" Value="4"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Slider}">
                                                <Border x:Name="border" Margin="{TemplateBinding Opacity, Converter={DemiMarginConverter}}" SnapsToDevicePixels="True">
                                                    <Grid>
                                                        <TickBar x:Name="BottomTick" Fill="{TemplateBinding Background}" Placement="Right" Visibility="Visible" Width="4"/>
                                                        <Track x:Name="PART_Track" Width="{TemplateBinding Opacity}">
                                                            <Track.DecreaseRepeatButton>
                                                                <RepeatButton Command="Slider.DecreaseLarge">
                                                                    <RepeatButton.Style>
                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </RepeatButton.Style>
                                                                </RepeatButton>
                                                            </Track.DecreaseRepeatButton>
                                                            <Track.IncreaseRepeatButton>
                                                                <RepeatButton Command="Slider.IncreaseLarge">
                                                                    <RepeatButton.Style>
                                                                        <Style TargetType="{x:Type RepeatButton}">
                                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                            <Setter Property="Focusable" Value="False"/>
                                                                            <Setter Property="IsTabStop" Value="False"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </RepeatButton.Style>
                                                                </RepeatButton>
                                                            </Track.IncreaseRepeatButton>
                                                            <Track.Thumb>
                                                                <Thumb x:Name="Thumb" Focusable="False" Height="{TemplateBinding Opacity}" OverridesDefaultStyle="True">
                                                                    <Thumb.Template>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                                                                <Path x:Name="grip" Data="M0,0L2,2 0,4z" Fill="{TemplateBinding Foreground}" Stretch="Fill"/>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Thumb.Template>
                                                                </Thumb>
                                                            </Track.Thumb>
                                                        </Track>
                                                    </Grid>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="TickFrequency" Value="21"/>
                                </Style>
                            </Slider.Style>
                        </Slider>
                        <gauge:LinearGauge x:Name="linearGauge" BackgroundType="None" Grid.Column="1" Orientation="Vertical" RimType="None">
                            <gauge:LinearScale BorderBrush="Black" BorderWidth="1" BarAscent="100%" Background="{TemplateBinding Background}" BarExtent="100%">
                                <gauge:LinearTickSet Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}">
                                    <gauge:LinearTickSet.Pointers>
                                        <gauge:LinearPointerBar Background="{TemplateBinding Color}" DampeningMinimumDuration="0" DampeningMaximumDuration="0" Height="{Binding ActualHeight, Converter={SubstractConverter AreOperandsReversed=False, MinimumAllowedValue=1, RightOperand=2.0}, ElementName=linearGauge}" HasDropShadow="False" PointerExtent="100%" PointerAscent="100%" Value="{TemplateBinding Value}" Width="{Binding ActualWidth, Converter={SubstractConverter AreOperandsReversed=False, MinimumAllowedValue=1, RightOperand=2.0}, ElementName=linearGauge}"/>
                                    </gauge:LinearTickSet.Pointers>
                                </gauge:LinearTickSet>
                            </gauge:LinearScale>
                        </gauge:LinearGauge>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RSI_Stencil_R_Valve" TargetType="{x:Type RSI_BlockValve}">
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RSI_BlockValve}">
                    <RSIGrid>
                        <RSIGrid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </RSIGrid.ColumnDefinitions>
                        <RSIGrid Background="{TemplateBinding Background}" Grid.Column="1">
                            <RSIGrid x:Name="path" RenderTransformOrigin="0.5,0.5">
                                <RSILine HorizontalAlignment="Left" Height="13.621" Stroke="White" StrokeThickness="2" VerticalAlignment="Top" Width="2" Orientation="Vertical" Margin="22.006,18.797,0,0"/>
                                <RSIPath Data="M444.875,186.25 L483,209 482.875,186.375 444.625,208.25 z" Fill="{TemplateBinding CurrentColor}" Stretch="Fill" Height="Auto" Width="Auto" Margin="3.485,20.731,2.14,0.519"/>
                                <RSIText Text="R" Foreground="White" Margin="19.88,1.066,17.527,28.203" HorizontalAlignment="Center" VerticalAlignment="Center" Width="7.593" />
                                <RSIRectangle Stroke="White" StrokeThickness="2" Margin="12.88,16.797,10.995,26.203"/>
                                <RSIRectangle Stroke="White" StrokeThickness="2" Margin="12.88,1.25,10.995,41.75"/>
                                <RSIRectangle Stroke="White" StrokeThickness="2" Margin="32.005,1.25,10.995,26.333"/>
                                <RSIRectangle Stroke="White" StrokeThickness="2" Margin="12.88,1.25,30.12,26.333"/>
                                <Flash x:Name="Flash" HorizontalAlignment="Right" Margin="-10" Visibility="Visible" VerticalAlignment="Top" Visitor="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                            </RSIGrid>
                        </RSIGrid>
                        <TextBlock x:Name="Tagname" Grid.Column="1" HorizontalAlignment="Center" Margin="-200,0,-200,-15" TextAlignment="Center" Text="{TemplateBinding TagName}" VerticalAlignment="Bottom" Foreground="White">
                            <TextBlock.Visibility>
                                <TAGNAMESBinding Converter="{BoolToHiddenConverter}" Path="ModelValue">
                                    <TAGNAMESBinding.FallbackValue>
                                        <System:Boolean>True</System:Boolean>
                                    </TAGNAMESBinding.FallbackValue>
                                </TAGNAMESBinding>
                            </TextBlock.Visibility>
                        </TextBlock>
                    </RSIGrid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="West">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalAlignment" TargetName="Tagname" Value="Left"/>
                            <Setter Property="VerticalAlignment" TargetName="Tagname" Value="Center"/>
                            <Setter Property="Margin" TargetName="Tagname" Value="0,0,-200,0"/>
                            <Setter Property="Grid.Column" TargetName="Tagname" Value="2"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="East">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalAlignment" TargetName="Tagname" Value="Right"/>
                            <Setter Property="VerticalAlignment" TargetName="Tagname" Value="Center"/>
                            <Setter Property="Margin" TargetName="Tagname" Value="-200,0,0,0"/>
                            <Setter Property="Grid.Column" TargetName="Tagname" Value="0"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="South">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <RotateTransform Angle="180"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalAlignment" TargetName="Tagname" Value="Center"/>
                            <Setter Property="VerticalAlignment" TargetName="Tagname" Value="Top"/>
                            <Setter Property="Margin" TargetName="Tagname" Value="-200,-20,-200,0"/>
                            <Setter Property="Grid.Column" TargetName="Tagname" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>